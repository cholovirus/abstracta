#include <iostream>
#include "RSA.h"
#include <NTL/ZZ.h>
#include <fstream>
#include <sstream>
using namespace std;
using namespace NTL;
#include "RC4.h"



ZZ string_ZZ(string str){
    ZZ num(NTL::INIT_VAL,str.c_str());
    return num;
}

string ZZ_string(ZZ var){
    stringstream x;
    x << var;
    return x.str();
}


int main()
{
   /* string se,sN;
    se="89406277722060439079934503487353636067066117959293172530124469316041184040950286542948188731360095414672987062733051509956080395592446836372815964982819100518248810919411456912655181462849183296995491442704763776946725907197499431827067176122495421384059275725830704861953530689245908763533107825206085911169";
    sN="14308228950334892670896569000562759865281943497853640084174011097295971519928034621053210943937916296127902635590152382239051822924592663477768062746741870861304246660214551168191089482142410966245948692981808838571157479969592798263561029333001363017892060385930237432031640545539894931350860870622408492078140881835105272363036615022953922384225425117327233245689913524897177171458239663509444713386182341766633407396251528941102184406553916176835940815709848390990869482795138185438185741047928044299113127651058733662300037876995380261575393736457246170895384265539169008958714128599132942783193603927578304329839";
    ZZ e,N;
    e=string_ZZ(se);
    N=string_ZZ(sN);

    RSA a(e,N);
    a.Incriptado("rsa no funciona");*/


    //-------------------------------


    //RSA a(1024);


    //------------------------------


   /* string pris,ps,qs;
    pris="14141497436283874887758103870326494029170571005557431249697773447198695746127488437202058085106667248361621642293876518755887070953337444491496894567280275280455481186893854245632562456570855452767597032092017947525227847778228464139677118127676788880808188208112317436670646091368975456932253119861070641328277817649865071843310572686660458530038205450422734491663419868568440528931534403655478563904031457077349635590809739255542991364206387958445055498259581233244940504502724586983169040268576003150632722805336236248193812885223651692594440321248155265049036652103435802741380407850431464024264101241260882344359";
    ps="133952264433255881485151048814535262163043221506221039347452393264851807954929771734838718058167353893363508938843669280265899631655145487245418603509408156946734162813426107396309260666236342809266030049288943331801048097783520660415406246477563753549692980842834763678765059755264184788172006112788800575873";
    qs="115895400496146877175453818974316746129823039299535889388183599875215133186243774412156490055829762666137430806760897110346092263520950755729691630853214798262575065060507758090584147437887607268244520549111880274814208688816882544675885330337897535098557576427284446288718041721808923721803066437423100645621";

    ZZ pri,p,q;
    pri=string_ZZ(pris);
    p=string_ZZ(ps);
    q=string_ZZ(qs);
    RSA b(pri,p,q);
    cout<<b.Desincriptado("cifrado")<<endl;*/



}
